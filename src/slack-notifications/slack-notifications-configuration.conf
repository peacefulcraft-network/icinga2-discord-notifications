template Notification "discord-notifications-default-configuration" {
    types = [ Problem, Acknowledgement, Recovery, Custom,
              FlappingStart, FlappingEnd,
              DowntimeStart, DowntimeEnd, DowntimeRemoved ]

    users = [ "icingaadmin" ]

    period = "24x7"

    interval = 5m

    vars.discord_notifications_icinga2_base_url = "http(s)://something.tld/icingaweb2"
    vars.discord_notifications_webhook_url="CHANNEL WEBHOOK URL GOES HERE"
    vars.discord_notifications_botname = ""
    vars.discord_notifications_icon_dictionary = {
       "DOWNTIMEREMOVED" = "leftwards_arrow_with_hook",
       "ACKNOWLEDGEMENT" = "ballot_box_with_check",
       "PROBLEM" = "red_circle",
       "RECOVERY" = "large_blue_circle",
       "WARNING" = "bell",
       "CRITICAL" = "red_circle",
       "OK" = "large_blue_circle",
       "UNKNOWN" = "grey_question",
       "DOWNTIMESTART" = "arrow_up_small",
       "DOWNTIMEEND" = "arrow_down_small",
       "FLAPPINGSTART" = "small_red_triangle",
       "FLAPPINGEND" = "small_red_triangle_down",
       "CUSTOM" = "speaking_head_in_silhouette"
    }
}

template Notification "discord-notifications-configuration" {
    import "discord-notifications-default-configuration"

    command = "discord-notifications-command"
}

template Notification "discord-notifications-default-configuration-services" {
    import "discord-notifications-configuration"

    states = [ OK, Warning, Critical, Unknown ]
}

template Notification "discord-notifications-default-configuration-hosts" {
    import "discord-notifications-configuration"

    states = [ Up, Down ]
}

apply Notification "discord-notifications-notification-hosts" to Host {
  import "discord-notifications-default-configuration-hosts"

  assign where host.vars.discord_notifications == "enabled"
}

apply Notification "discord-notifications-notification-services" to Service {
  import "discord-notifications-default-configuration-services"

  assign where service.vars.discord_notifications == "enabled"
}
