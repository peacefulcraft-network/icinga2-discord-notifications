object NotificationCommand "discord-notifications-command" {
    command = {{
        log(LogDebug, "discord-notifications", "Reading Configuration")
        var webhook_url = macro("$discord_notifications_webhook_url$")
        var discord_botname = macro("$discord_notifications_bot_name$")
        var icinga2_base_url = macro("$discord_notifications_icinga2_base_url$")

        log(LogDebug, "discord-notifications", "Parsing Notification Data")
        var notification_type = macro("$notification.type$")
        var notification_author = macro("$notification.author$")
        var notification_comment = macro("$notification.comment$")
        var icinga_long_date_time = macro("$icinga.long_date_time$")
        var icinga_timet = macro("$icinga.timet$")
        var service_name = macro("$service.name$")
        var service_display_name = macro("$service.display_name$")
        var service_state = macro("$service.state$")
        var service_check_attempt = macro("$service.check_attempt$")
        var service_last_state = macro("$service.last_state$")
        var service_output = macro("$service.output$")
        var host_name = macro("$host.name$")
        var host_display_name = macro("$host.display_name$")
        var host_state = macro("$host.state$")
        var host_check_attempt = macro("$host.check_attempt$")
        var host_last_state = macro("$host.last_state$")
        var host_output = macro("$host.output$")
        var notification_data = {
            "notification.type" = notification_type,
            "notification.author" = notification_author,
            "notification.comment" = notification_comment,
            "icinga.long_date_time" = icinga_long_date_time,
            "icinga.timet" = icinga_timet,
            "service.name" = service_name,
            "service.display_name" = service_display_name,
            "service.state" = service_state,
            "service.check_attempt" = service_check_attempt,
            "service.last_state" = service_last_state,
            "service.output" = service_output,
            "host.name" = host_name,
            "host.display_name" = host_display_name,
            "host.state" = host_state,
            "host.check_attempt" = host_check_attempt,
            "host.last_state" = host_last_state,
            "host.output" = host_output,
        }

        var notification_type_custom_text = ""
        if(notification_type == "CUSTOM"){
            notification_type_custom_text = "(Author: " + notification_author + ", Message: " + notification_comment + ")"
        }

        try {
            var icon = discord_icon_dictionary.get(notification_type)
        } except {
            var icon = "bell"
        }

        var host_name_with_link = "[" + host_display_name + "](" + icinga2_base_url + "/monitoring/host/show?host=" + host_name + ")"
        var notification_title = "error_determining_title"
        var plugin_output = "error collecting plugin output"

        if(service_name !=null){
            var service_name_with_link = "[" + service_display_name + "](" + icinga2_base_url + "/monitoring/service/show?host=" + host_name + "&service=" + service_name + ")"

            var service_state_text = " transitioned from state **" + service_last_state + "** to state **" + service_state + "**"
            if(service_last_state == service_state) {
                service_state_text = " is still in state **" + service_state + "**"
            }

            notification_title = ":" + icon + ": " + notification_type + ": Service " + service_name_with_link + service_state_text
            plugin_output = "```" + service_output + "```"
        }else{
            var host_state_text = " transitioned from state **" + host_last_state + "** to state **" + host_state + "**"
            if(host_last_state == host_state) {
                host_state_text = " is still in state **" + host_state + "**"
            }

            notification_title = ":" + icon + ": " + notification_type + ": Host " + host_name_with_link + host_state_text
            plugin_output = "```" + host_output + "```"
        }

        var payload_map = {"content" =  notification_title + "\n" + plugin_output};
        var payload = "'" + Json.encode( payload_map ) + "'"

        var cmd = [
                    "curl",
                    webhook_url,
                    "--fail",
                    "--connect-timeout", "30",
                    "--max-time", "60",
                    "--silent", "--show-error",
                    "--request", "POST",
                    "--header", "\"Content-Type: application/json\"",
                    "-d", payload
        ]

        log(LogDebug, "discord-notifications", "Notifying webhook")
        
        var notification_command = cmd.join(" ")
        return notification_command        
    }}
}
